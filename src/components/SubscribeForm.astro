---
import Button from '../components/Button.astro';
import Modal from '../components/Modal.astro';
import { getTranslations} from '../translations/index.ts';

// Haal huidige taal op van Astro
const currentLocale = Astro.currentLocale || 'en';
const t = getTranslations(currentLocale);
---

<form id="subscribe-form" class="w-full max-w-md space-y-4" novalidate>
    <div class="flex space-x-2">
        <input
            type="email"
            name="email"
            id="email"
            required
            placeholder={t.subscribeForm.emailPlaceholder}
            class="flex-grow px-4 py-2 border border-gray rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-green focus:border-green transition-all text-black bg-cream font-text text-xl"
        />
        <select 
            id="language" 
            name="language"
            class="p-2 border border-gray rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-green focus:border-green transition-all text-black text-xl bg-cream"
            required
        >
            <option value="en" selected={currentLocale === 'en'}>ðŸ‡¬ðŸ‡§</option>
            <option value="nl" selected={currentLocale === 'nl'}>ðŸ‡³ðŸ‡±</option>
        </select>
    </div>
    <Button type="submit" id="submit-button" content={t.subscribeForm.submitButton} />
</form>

<Modal id="feedback-modal" />

<script define:vars={{ 
    frontendUrl: import.meta.env.PUBLIC_FRONTEND_URL || 'http://localhost:4321',
    t: t.subscribeForm
}}>
    document.addEventListener('DOMContentLoaded', () => {
        const form = document.getElementById('subscribe-form');
        const submitButton = document.getElementById('submit-button');
        const emailInput = document.getElementById('email');
        const languageSelect = document.getElementById('language');

        function validateEmail(email) {
            const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return re.test(email);
        }

        if (form) {
            form.addEventListener('submit', async (e) => {
                e.preventDefault();

                // Show loading state
                submitButton.disabled = true;
                submitButton.innerHTML = t.loadingText;

                const email = emailInput.value.trim();
                if (!email || !validateEmail(email)) {
                    window.ModalFunctions.showModal('feedback-modal', t.validationError, false);
                    submitButton.disabled = false;
                    submitButton.innerHTML = t.submitButton;
                    return;
                }

                // Use the local proxy API endpoint instead of directly to Sendy
                try {
  const email = emailInput.value.trim();
  const language = languageSelect.value;
  
  // Direct Sendy API aanroepen
  const sendyUrl = "https://newsletter.popupcity.net/subscribe";
  const apiKey = "96U7CnteXpG9Bvi6Cn4g";
  const listId = language === 'nl' ? "31YdPQSL7hZZBZBaR763EULA" : "MtTwkoWw0HCcaCvSFoIvUg";
  
  const formData = new FormData();
  formData.append('api_key', apiKey);
  formData.append('list', listId);
  formData.append('email', email);
  formData.append('boolean', 'true');
  
  const response = await fetch(sendyUrl, {
    method: 'POST',
    body: formData
  });
  
  const responseText = await response.text();
  console.log("Direct Sendy response:", responseText);
  
  if (responseText === '1' || responseText.toLowerCase().trim() === 'true') {
    window.ModalFunctions.showModal('feedback-modal', t.success, true);
    form.reset();
  } else if (responseText.includes('Already subscribed')) {
    window.ModalFunctions.showModal('feedback-modal', t.alreadySubscribed, false);
  } else {
    window.ModalFunctions.showModal('feedback-modal', t.errorMessage, false);
    console.error('Error:', responseText);
  }
} catch (error) {
  console.error('API call error details:', error);
  window.ModalFunctions.showModal('feedback-modal', t.connectionError, false);
} finally {
                    // Restore button
                    submitButton.disabled = false;
                    submitButton.innerHTML = t.submitButton;
                }
            });
        }
    });
</script>